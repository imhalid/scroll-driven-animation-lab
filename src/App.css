@keyframes sticky-parallax-header-move-and-size {
    from {
        background-position: 50% 0;
        height: 100vh;
        font-size: calc(4vw + 1em);
    }

    to {
        background-position: 50% 100%;
        background-color: #252716;
        height: 10vh;
        font-size: 2em;
    }
}

#sticky-parallax-header {
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 10;
    background-size: cover;
    background-position: 50% 50%;
    background-blend-mode: soft-light;
    display: grid;
    place-items: center;
    text-align: center;
    background-image: url("https://images.unsplash.com/photo-1717496002081-38a90d3cba26?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D");
    animation: sticky-parallax-header-move-and-size linear forwards;
    animation-timeline: scroll();
    animation-range: 0vh 95vh;
}

.gallery-wrapper {
    perspective: 30000px;
}

@keyframes reveal {
    to {
        opacity: 1;
        transform: translateY(0px) rotateX(0deg);
        filter: blur(0px) saturate(1);
    }
}

#img-container {
    transform: translateY(calc(var(--index) * 10px))
        rotateX(calc(var(--index) * 5deg)) rotateY(calc(var(--index) * 0deg));
    filter: blur(calc(var(--index) * 1px)) saturate(0);
    --start: calc(var(--index) * 10%);
    opacity: 0;
    counter-reset: variable var(--start);
    /* Create View Timeline */
    view-timeline-name: --revealing-image;
    view-timeline-axis: block;
    animation: linear reveal both;
    /* Attach animation, linked to the  View Timeline */
    animation-timeline: --revealing-image;

    /* Tweak range when effect should run*/
    animation-range: entry var(--start) cover 50%;
}

html {
    scroll-timeline: --page-scroll block;
}

@keyframes grow-progress {
    from {
        transform: scaleX(0);
    }
    to {
        transform: scaleX(1);
    }
}

#progress {
    width: 100%;
    transform-origin: 0 50%;
    animation: grow-progress auto linear;
    animation-timeline: --page-scroll;
}

@layer warning {
    .warning {
        box-sizing: border-box;
        padding: 1em;
        margin: 1em 0;
        border: 1px solid #ccc;
        background: rgba(255 255 205 / 0.8);
    }

    .warning > :first-child {
        margin-top: 0;
    }

    .warning > :last-child {
        margin-bottom: 0;
    }

    .warning a {
        color: blue;
    }

    .warning--info {
        border: 1px solid #123456;
        background: rgb(205 230 255 / 0.8);
    }

    .warning--alarm {
        border: 1px solid red;
        background: #ff000010;
    }

    @supports (animation-timeline: view()) {
        .warning:not([data-bug]) {
            display: none;
        }
    }

    @supports (animation-range: 0vh 90vh) {
        .warning[data-bug="1427062"] {
            display: none;
        }
    }
}

.banner {
    width: 100%;
    height: 900px;
    text-align: center;
    overflow: hidden;
    position: relative;
}

.banner .slider {
    position: absolute;
    width: 200px;
    height: 250px;
    top: 10%;
    left: calc(50% - 100px);
    transform-style: preserve-3d;
    transform: perspective(1000px);
    animation: autoRun 80s linear infinite;
    z-index: 2;
}

@keyframes autoRun {
    from {
        transform: perspective(2000px) rotateX(-5deg) rotateY(0deg);
    }
    to {
        transform: perspective(2000px) rotateX(-5deg) rotateY(360deg);
    }
}

@keyframes autoOpacity {
    0% {
        opacity: 0;
    }
    20% {
        opacity: 1;
    }
    80% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

.banner .slider .item {
    position: absolute;
    top: 0;
    inset: 0 0 0 0;
    transform: rotateY(
            calc((var(--index) - 1) * (360 / var(--quantity)) * 1deg)
        )
        translateZ(550px);
    width: 150px;
    height: 300px;
    object-fit: contain;
    animation: autoOpacity 4s forwards infinite;
    /* animation-delay: calc(var(--index) * 1s); */
}

.banner .slider .item img {
    width: 100px;
    height: 100px;
    max-width: 100px;
    max-width: 100px;
    object-fit: cover;
}

@keyframes autoRunReverse {
    from {
        transform: perspective(2000px) rotateY(0deg);
    }
    to {
        transform: perspective(2000px) rotateY(360deg);
    }
}

.banner .slider .gradient {
    width: 500px;
    height: 300px;
    right: calc(50% - 100px);
    transform-style: preserve-3d;
    transform: perspective(2000px);
    animation: autoRunReverse 90s linear infinite;
    animation-direction: reverse;
    background: linear-gradient(
        90deg,
        rgba(23, 23, 23, 0) 0%,
        rgba(23, 23, 23, 1) 20%,
        rgba(23, 23, 23, 1) 50%,
        rgba(23, 23, 23, 1) 82%,
        rgba(23, 23, 23, 0) 100%
    );
}
